{"version":3,"file":"event-source.mjs","sources":["../src/event-source.ts"],"sourcesContent":["import { EventTarget, defineEventAttribute } from \"event-target-shim\"\n\nconst LINE = /([^\\r\\n]*)(?:\\r\\n|[\\r\\n])/gu\nconst DIGITS = /^[0-9]+$/u\n\n//istanbul ignore next\nconst queue: (f: () => void) => void =\n    /*eslint-disable @mysticatea/prettier */\n    typeof queueMicrotask === \"function\" ? queueMicrotask : // Modern browsers\n    typeof setImmediate === \"function\" ? setImmediate : // IE11\n    /* otherwise */ (f: () => void) => setTimeout(f, 0) // Foolproof\n    /*eslint-enable @mysticatea/prettier */\n\ntype Events = {\n    error: Event\n    message: MessageEvent\n    open: Event\n}\ntype EventAttributes = {\n    onerror: Event\n    onmessage: MessageEvent\n    onopen: Event\n}\n\nlet defaultReconnectionTime = 4000\nlet reconnectionTimeIncreasingRate = 1.5\nlet maxBufferSize = 64 * 1024\n\n/**\n * Constants for `readyState` property.\n */\nexport const enum ReadyState {\n    CONNECTING = 0,\n    OPEN = 1,\n    CLOSED = 2,\n}\n\n/**\n * `EventSource` implementation.\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html\n */\nexport class EventSource extends EventTarget<\n    Events,\n    EventAttributes,\n    \"standard\"\n> {\n    /** The connection has not yet been established, or it was closed and the user agent is reconnecting. */\n    public static readonly CONNECTING = ReadyState.CONNECTING\n    /** The user agent has an open connection and is dispatching events as it receives them. */\n    public static readonly OPEN = ReadyState.OPEN\n    /** The connection is not open, and the user agent is not trying to reconnect. Either there was a fatal error or the `close()` method was invoked. */\n    public static readonly CLOSED = ReadyState.CLOSED\n\n    /** The connection has not yet been established, or it was closed and the user agent is reconnecting. */\n    public readonly CONNECTING = ReadyState.CONNECTING\n    /** The user agent has an open connection and is dispatching events as it receives them. */\n    public readonly OPEN = ReadyState.OPEN\n    /** The connection is not open, and the user agent is not trying to reconnect. Either there was a fatal error or the `close()` method was invoked. */\n    public readonly CLOSED = ReadyState.CLOSED\n\n    /** Returns the URL providing the event stream. */\n    public get url(): string {\n        return internalSlots.get(this).url.href\n    }\n    /** Returns true if the credentials mode for connection requests to the URL providing the event stream is set to \"include\", and false otherwise. */\n    public get withCredentials(): boolean {\n        return internalSlots.get(this).withCredentials\n    }\n\n    /** Returns the state of this EventSource object's connection. It can have the values described below. */\n    public get readyState(): ReadyState {\n        return internalSlots.get(this).readyState\n    }\n\n    public constructor(url: string, options?: EventSourceInit) {\n        super()\n        createConnection(this, internalSlots.init(this, url, options))\n    }\n\n    /**\n     * Aborts any instances of the fetch algorithm started for this EventSource object, and sets the readyState attribute to CLOSED.\n     */\n    public close(): void {\n        close(internalSlots.get(this))\n    }\n}\ndefineEventAttribute(EventSource.prototype, \"error\")\ndefineEventAttribute(EventSource.prototype, \"message\")\ndefineEventAttribute(EventSource.prototype, \"open\")\n\n// Set properties and methods enumerable.\nObject.defineProperties(EventSource.prototype, {\n    url: { enumerable: true },\n    withCredentials: { enumerable: true },\n    readyState: { enumerable: true },\n    close: { enumerable: true },\n})\n\n/**\n * Set the default value of reconnection time.\n *\n * The reconnection time is an internal slot of `EventSource` object.\n * It's a user-agent-defined value.\n *\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#concept-event-stream-reconnection-time\n * @param value The value to set.\n */\nexport function setDefaultReconnectionTime(value: number): void {\n    if (!Number.isFinite(value) || value <= 0) {\n        throw new Error(`reconnection time must be a positive number.`)\n    }\n    defaultReconnectionTime = value\n}\n\n/**\n * Set the default value of reconnection time.\n *\n * The reconnection time is an internal slot of `EventSource` object.\n * It's a user-agent-defined value.\n *\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#concept-event-stream-reconnection-time\n * @param value The value to set.\n */\nexport function setReconnectionTimeIncreasingRate(value: number): void {\n    if (!Number.isFinite(value) || value <= 1) {\n        throw new Error(\n            `reconnection time's increasing rate must be greater than 1.0.`,\n        )\n    }\n    reconnectionTimeIncreasingRate = value\n}\n\n/**\n * Set the default value of max buffer size.\n *\n * This is constant for implementation details.\n * If the length of `XMLHttpRequest#responseText` became greater than max buffer\n * size, this implementation disconnects and reestablishes in order to clear it.\n *\n * @param value The value to set.\n */\nexport function setMaxBufferSize(value: number): void {\n    if (!Number.isFinite(value) || value <= 0) {\n        throw new Error(`max buffer size must be a positive number.`)\n    }\n    maxBufferSize = value\n}\n\ntype InternalSlot = {\n    /** https://html.spec.whatwg.org/multipage/server-sent-events.html#concept-eventsource-url */\n    url: HTMLHyperlinkElementUtils\n    /** https://html.spec.whatwg.org/multipage/server-sent-events.html#concept-event-stream-request */\n    request: XMLHttpRequest | null\n    /** https://html.spec.whatwg.org/multipage/server-sent-events.html#concept-event-stream-reconnection-time */\n    reconnectionTime: number\n    /** https://html.spec.whatwg.org/multipage/server-sent-events.html#concept-event-stream-last-event-id */\n    lastEventId: string\n\n    /** https://html.spec.whatwg.org/multipage/server-sent-events.html#dom-eventsource-withcredentials */\n    withCredentials: boolean\n    /** https://html.spec.whatwg.org/multipage/server-sent-events.html#dom-eventsource-readystate */\n    readyState: ReadyState\n\n    /**\n     * Additional interval state for the step 3 of https://html.spec.whatwg.org/multipage/server-sent-events.html#reestablish-the-connection\n     * This will be reset on `announceConnection()` function and will be increased in `reestablishConnection()` function.\n     */\n    additionalReconnectionTime: number\n}\n\ntype ParsingState = {\n    origin: string\n    data: string\n    type: string\n    lastEventId: string | null\n    pos: number\n}\n\n// Internal data slots.\nconst internalSlots = new class {\n    private map = new WeakMap<EventSource, InternalSlot>()\n\n    public init(\n        key: EventSource,\n        url: string,\n        options: EventSourceInit | undefined,\n    ): InternalSlot {\n        const a = parseURL(url)\n        const slots: InternalSlot = {\n            url: a,\n            request: null,\n            reconnectionTime: defaultReconnectionTime,\n            lastEventId: \"\",\n            withCredentials: Boolean(options && options.withCredentials),\n            readyState: ReadyState.CONNECTING,\n            additionalReconnectionTime: 0,\n        }\n        this.map.set(key, slots)\n\n        if (!a.href.startsWith(a.protocol)) {\n            throw new Error(`Invalid URL: ${JSON.stringify(url)}`)\n        }\n        return slots\n    }\n\n    public get(key: EventSource): InternalSlot {\n        if (!this.map.has(key)) {\n            throw new Error(\"'this' reference must be a EventSource.\")\n        }\n        return this.map.get(key)!\n    }\n}()\n\n/**\n * Connect to the server.\n * @param source The EventSource object.\n */\nfunction createConnection(source: EventSource, slots: InternalSlot): void {\n    if (window.navigator.onLine === false) {\n        window.addEventListener(\"online\", function listener() {\n            window.removeEventListener(\"online\", listener)\n            if (slots.readyState !== ReadyState.CLOSED) {\n                createConnection(source, slots)\n            }\n        })\n        return\n    }\n\n    const state: ParsingState = {\n        origin: \"\",\n        data: \"\",\n        type: \"\",\n        lastEventId: null,\n        pos: 0,\n    }\n    const request = (slots.request = new window.XMLHttpRequest())\n    let first = true\n\n    request.open(\"GET\", source.url, true)\n    request.withCredentials = source.withCredentials\n    request.setRequestHeader(\"Accept\", \"text/event-stream\")\n    request.setRequestHeader(\"Cache-Control\", \"no-store\")\n    if (slots.lastEventId) {\n        request.setRequestHeader(\"Last-Event-ID\", slots.lastEventId)\n    }\n\n    // Process received chunk.\n    request.onprogress = () => {\n        if (slots.readyState === ReadyState.CLOSED || request.status === 0) {\n            return\n        }\n\n        // Verify the connection if it's first time.\n        if (first) {\n            first = false\n\n            const { status, responseURL } = request\n            const contentType = request.getResponseHeader(\"Content-Type\")\n            if (\n                status === 200 &&\n                contentType != null &&\n                contentType.toLowerCase().startsWith(\"text/event-stream\")\n            ) {\n                // Known Limitation:\n                //   IE11 doesn't support `responseURL`. In that case, we cannot\n                //   get the final URL, so it uses the request URL.\n                const a = responseURL ? parseURL(responseURL) : slots.url\n                state.origin = `${a.protocol}//${a.host}`\n                announceConnection(source, slots)\n            } else {\n                failConnection(source, slots)\n                return\n            }\n        }\n\n        // Handle events.\n        parseStream(source, slots, state, request.responseText)\n\n        // Clear `xhr.responseText` if it's longer than `maxBufferSize`, in\n        // order to prevent memory leaks.\n        if (request.responseText.length > maxBufferSize) {\n            request.abort()\n        }\n    }\n\n    // Reestablish the connection on 200 OK.\n    // Otherwise, fail the connection.\n    request.onload = () => {\n        if (slots.readyState === ReadyState.CLOSED || request.status === 0) {\n            return\n        }\n\n        slots.request = null\n        if (request.status === 200) {\n            reestablishConnection(source, slots)\n        }\n        if (request.status === 204 && first) {\n            failConnection(source, slots)\n        }\n    }\n\n    // Restablish the connection on networking error.\n    request.onerror = () => {\n        if (slots.readyState !== ReadyState.CLOSED) {\n            slots.request = null\n            reestablishConnection(source, slots)\n        }\n    }\n\n    // Reconnect on abort.\n    request.onabort = () => {\n        if (slots.readyState !== ReadyState.CLOSED) {\n            slots.request = null\n            createConnection(source, slots)\n        }\n    }\n\n    request.send()\n}\n\n/**\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#announce-the-connection\n */\nfunction announceConnection(source: EventSource, slots: InternalSlot): void {\n    queue(() => {\n        if (slots.readyState !== ReadyState.CLOSED) {\n            slots.readyState = ReadyState.OPEN\n            source.dispatchEvent(createEvent(\"open\"))\n        }\n    })\n\n    // Update additional reconnection time.\n    slots.additionalReconnectionTime = 0\n}\n\n/**\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#reestablish-the-connection\n */\nfunction reestablishConnection(source: EventSource, slots: InternalSlot): void {\n    queue(() => {\n        if (slots.readyState !== ReadyState.CLOSED) {\n            slots.readyState = ReadyState.CONNECTING\n            source.dispatchEvent(createEvent(\"error\"))\n        }\n    })\n\n    setTimeout(() => {\n        queue(() => {\n            if (slots.readyState === ReadyState.CONNECTING) {\n                createConnection(source, slots)\n            }\n        })\n    }, slots.reconnectionTime + slots.additionalReconnectionTime)\n\n    // Update additional reconnection time.\n    slots.additionalReconnectionTime =\n        reconnectionTimeIncreasingRate *\n            (slots.reconnectionTime + slots.additionalReconnectionTime) -\n        slots.reconnectionTime\n}\n\n/**\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#fail-the-connection\n */\nfunction failConnection(source: EventSource, slots: InternalSlot): void {\n    queue(() => {\n        if (slots.readyState !== ReadyState.CLOSED) {\n            close(slots)\n            source.dispatchEvent(createEvent(\"error\"))\n        }\n    })\n}\n\n/**\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#parsing-an-event-stream\n */\nfunction parseStream(\n    source: EventSource,\n    slots: InternalSlot,\n    state: ParsingState,\n    buffer: string,\n): void {\n    let match: RegExpExecArray | null\n    LINE.lastIndex = state.pos\n    while ((match = LINE.exec(buffer)) != null) {\n        state.pos = LINE.lastIndex\n\n        const line = match[1]\n        const colonPos = line.indexOf(\":\")\n\n        if (line === \"\") {\n            dispatchMessage(source, slots, state)\n        } else if (colonPos === -1) {\n            processField(slots, state, line, \"\")\n        } else if (colonPos >= 1) {\n            const name = line.slice(0, colonPos)\n            const value = line.slice(\n                colonPos + (line[colonPos + 1] === \" \" ? 2 : 1),\n            )\n            processField(slots, state, name, value)\n        }\n    }\n}\n\n/**\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#processField\n */\nfunction processField(\n    slots: InternalSlot,\n    state: ParsingState,\n    fieldName: string,\n    fieldValue: string,\n): void {\n    switch (fieldName.toLowerCase()) {\n        case \"event\":\n            state.type = fieldValue\n            break\n\n        case \"data\":\n            state.data += fieldValue\n            state.data += \"\\n\"\n            break\n\n        case \"id\":\n            if (!fieldValue.includes(\"\\u0000\")) {\n                state.lastEventId = fieldValue\n            }\n            break\n\n        case \"retry\":\n            if (DIGITS.test(fieldValue)) {\n                slots.reconnectionTime = parseInt(fieldValue, 10)\n            }\n            break\n\n        // no default\n    }\n}\n\n/**\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#dispatchMessage\n */\nfunction dispatchMessage(\n    source: EventSource,\n    slots: InternalSlot,\n    state: ParsingState,\n): void {\n    const { data, type, lastEventId } = state\n    state.data = state.type = \"\"\n\n    if (lastEventId != null) {\n        slots.lastEventId = lastEventId\n    }\n    if (data === \"\") {\n        return\n    }\n\n    const event = createMessageEvent(\n        type || \"message\",\n        data.slice(0, -1),\n        state.origin,\n        slots.lastEventId,\n    )\n\n    queue(() => {\n        if (slots.readyState !== ReadyState.CLOSED) {\n            source.dispatchEvent(event)\n        }\n    })\n}\n\n/**\n * Close the connection.\n */\nfunction close(slots: InternalSlot): void {\n    const { request } = slots\n    slots.readyState = ReadyState.CLOSED\n    slots.request = null\n\n    if (request) {\n        request.abort()\n    }\n}\n\n/**\n * Create an `Event` object.\n */\n/*istanbul ignore next */\nfunction createEvent(type: string): Event {\n    try {\n        return new window.Event(type, { bubbles: false, cancelable: false })\n    } catch {\n        // For IE11\n        const event = window.document.createEvent(\"Event\")\n        event.initEvent(type, false, false)\n        return event\n    }\n}\n\n/**\n * Create an `MessageEvent` object.\n */\n/*istanbul ignore next */\nfunction createMessageEvent(\n    type: string,\n    data: string,\n    origin: string,\n    lastEventId: string,\n): Event {\n    try {\n        return new window.MessageEvent(type, {\n            bubbles: false,\n            cancelable: false,\n            data,\n            lastEventId,\n            origin,\n            source: window,\n        })\n    } catch {\n        // For IE11\n        const event = window.document.createEvent(\"MessageEvent\")\n        event.initMessageEvent(\n            type,\n            false,\n            false,\n            data,\n            origin,\n            lastEventId,\n            window,\n        )\n        return event\n    }\n}\n\n/**\n * Parse and resolve URL.\n */\nfunction parseURL(url: string): HTMLHyperlinkElementUtils {\n    const a = window.document.createElement(\"a\")\n    a.href = url\n    return a\n}\n\n/**\n * Workaround of type error.\n * @internal\n */\ndeclare global {\n    interface MessageEvent {\n        initMessageEvent(\n            eventType: string,\n            canBubble: boolean,\n            cancelable: boolean,\n            data: any,\n            origin: string,\n            lastEventId: string,\n            source: any,\n        ): void\n    }\n\n    interface Window {\n        Event: typeof Event\n        MessageEvent: typeof MessageEvent\n        XMLHttpRequest: typeof XMLHttpRequest\n    }\n}\n"],"names":[],"mappings":"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"}